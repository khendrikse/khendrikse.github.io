{"pageProps":{"title":"Blog - programming | Karin Hendrikse","categories":["beginner","programming","learning","accessibility","html","productivity","career","watercooler","remote","javascript","npm","yarn","codenewbie","teaching","tutorial","hacktoberfest","open-source","theme","vsc","pastel"],"posts":[{"layout":"post","title":"Using roadmap.sh for structured self-learning","published":true,"oldBlog":true,"date":"2021-07-15","description":"These tips, tricks and resources helped me become a self-taught software developer and hopefully they can help you too.","intro":"Three years ago I made the switch from an entirely different work field to becoming a software developer. I got lucky enough to be hired at a company that allowed me to learn on the job. Yet, I had no formal computer science education and there was no plan set up for me to structurally start learning programming. I had to devise my own. These tips, tricks and resources helped me become a self-taught software developer and hopefully they can help you too.","tags":"beginner, programming, learning","cover_image":"2021-07-15.jpg","cover_image_alt":"a long winding road in a valley","markdownBody":"\nCover image by  [Jaromír Kavan](https://unsplash.com/@jerrykavan?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText) on [Unsplash](https://unsplash.com/s/photos/roadmap?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)\n\n\nThe tech industry evolves quickly and as a beginner this can make you feel like you are always behind. One of the things I really had to learn is that the basics are always the right priority to dive into. It does not matter what career goal you have, be it frontend, backend or anything in between or beyond. Understanding HTML, CSS and one of the many amazing programming language out there will be a good start to your career.\n\n## Which language to choose?\n\nThat depends on your own personal context. If you already landed a job and are expected to learn a specific language for it: choose that one. If you feel excited for another: go for the other one. When self-learning the key thing is motivation. Work with what makes you excited. Once you learn one language, the others can easily follow. Don’t feel rushed or pressured into something that does not ‘spark joy’.\n\nI started my journey through the RailsGirls community. So it felt right for me to follow some Ruby courses because I already knew people who could help me a little and it was the only language I had already seen. When I got hired as a frontend developer I picked up learning JavaScript. It was fun to see how some stuff was the same, and where the two languages differed. Again: once you know one language, others can easily follow.\n\n## You don’t know what you do not know\n\nOne of the reasons it is so hard when you are a beginner in tech is because you probably don’t know the gaps in your knowledge. Having a mentor, or knowing people who have more experience to help point into the right direction can be of huge help here. Luckily I was surrounded by an amazing group of people to point me into the right direction. Still, I was craving some more structure to help me set priorities when it came to learning the essentials.\n\n## Roadmap.sh\nThrough some luck I found [Kamran Ahmed’s](https://twitter.com/kamranahmedse) roadmap.sh. I checked out the frontend roadmap and was amazed at the way it helped me gain insight into things I did not know I could dive into. This is how I implemented it into my own learning:\n\n1. I created a markdown file and wrote down the list of things I wanted to learn using the roadmap.\n2. I went through the list and marked the ones that motivated me to learn, and the ones I knew could help me build the projects I was working on. I gave those extra priority.\n3. I went through the list again and for each topic I started searching the web for good resources that I could study to learn that subject matter. I did not study them immediately. I was just collecting and linking to those resources in the file. (Note: nowadays roadmap.sh has [some nice resources](https://roadmap.sh/guides) themselves for some subjects, make sure to check them out!).\n4. Every quarter I chose some subjects and studied the resources.\n5. When a subject was done, I had the satisfaction of checking the checkbox in front of it ✨\n\n## Projects will kickstart your career\nLast but not least: I noticed that through work and building personal projects, I was already able to check off some of the boxes on my list. Working on actual projects actually helps you learn so much quicker than doing courses, reading articles, books or watching videos. If you haven’t tried building something yourself yet: go for it! Find something that you think would be fun to build. Maybe try using a fun API that is available on the web. Like [NASA](https://api.nasa.gov/), [Spotify](https://developer.spotify.com/documentation/web-api/) or the [Star Wars API](https://swapi.dev/). It might feel daunting to start, but if you split up the project in small tasks it will become much easier.\n\n\nGood luck for all of you out there starting on your journeys. Don’t forget that the only person you should compare yourself with, is yourself. And every new thing you learn is one more thing you did not know before. Be nice to yourself and others, and build fun stuff.\n","slug":"using-roadmapsh-for-structured-self-learning"},{"layout":"post","title":"Coding with a group of 11 year olds","published":true,"oldBlog":true,"date":"2019-10-07","description":"Get them 'hacking' their favourite websites","tags":"beginner, teaching, tutorial, programming","intro":"Recently a we were asked if we could give a short lesson about coding to a group of 11 year olds in primary school. So my colleague and me started preparing a 1,5 hour workshop with the goal of showing the kids how much fun programming could be. This is the story of how it went.","cover_image":"https://media.giphy.com/media/l41lZlI5EjpMCaVdC/giphy.gif","cover_image_alt":"a cute moving image with a keyboard and cartoon cats going up and down","markdownBody":"\n## Get to know what they love\nOur goal was to stay as close to their own interests as possible. So with a little bit of research we discovered that these kids really loved to use mobile phones and consoles outside of school. Generally most of them knew and used apps like TikTok, SnapChat and WhatsApp, they regularly visited YouTube for watching videos and some of the kids played Minecraft or Fortnite at home.\n\n## Make it interactive\nTo keep them engaged we used [Kahoot](https://kahoot.com/). We wanted to switch between our (giphy-filled) slides and the Kahoot to ask them a few questions now and then about what we were talking about. When we actually had the lesson we decided to first just do all of the questions with Kahoot, talk a little about the answers and then dive deeper into them after the quiz. The kids really liked the quiz and already knew how it worked.\n\n*Tip:* make them understand that it is okay if they didn't get the answer. We also need to google most of what we do when we code.\n\n## Explain programming\nAs we only had 1,5 hours, we talked about a few basic things:\n\n* We dived into how a lot of things in our daily lives have a 'computer' inside of them. Washing machines, phones, laptops, tablets, consoles, even cars and satellites. And how cool it is that this means you can also program stuff for those devices.\n* We discussed how a computer knows what to do. For this we used the ['tell this person what to do'](#the-person-is-a-computer-exercise) exercise.\n* We explained how developers write computer programs, and that there are [different types of developers](#different-types-of-developers). We also talked about diversity in tech when it comes to people and their backgrounds, but also about the different types of developers.\n\n## The person is a computer exercise\nInspired by [@FloorDrees](https://twitter.com/FloorDrees) who did this exercise during a [RailsGirls](http://www.railsgirls.com) event. We let the kids steer me into writing a word on a whiteboard. The kids were pretty good at understanding that they had to be pretty specific in telling me what to do. 'Step forward', 'put your right hand forward' 'clench your hand around the object that is now referred to as a marker' etc. Some were even quick enough to understand that I had to remove the cap before writing.\n\n## Different types of developers\nThis is where our deep dive of their hobbies and interaction with the internet came in handy. We got to show them that there are different types of developers.\n* Some like to write software that helps get a rocket from the earth to mars.\n* Some want to make apps for phones and tablets, like TikTok, WhatsApp and SnapChat.\n* Some want to build websites, like the website of their favourite hiphop artists or YouTube.\n* Some want to make games, like Minecraft and Fortnite.\n\n\n## We let them 'hack' a website\nAfter the quiz and our explaining of what you can do with programming. We let them do a short 'hacking' exercise. On their laptops they got to go to their favourite website. Which, for most was YouTube or a popular news website as that is where we showed an example. Then by using `inspect` in the browser, we let them change the text of a video title or news article. This mostly resulted in videos of famous soccer players having titles with the kids names in them. They got to take screenshots which they got to share with their families later.\n\n## Wrapping it up\nFor the last few minutes one of us sat in front of the class to change colours and fonts on websites. After this we talked about how their changes will be lost once they refresh the page. And that it is a good thing that not anyone can just change news titles because then people could change other peoples work, or change the news however they would want. I think we were both very impressed on how aware the kids were of the danger of spreading lies and 'fake news'.\n\nThe kids also got to ask us a few more questions about what it is like to be a developer and how you can become one. Before we knew it, the lesson was over and the kids continued with their normal school day.\n\nWe had a huge amount of fun, but were exhausted 😂🥳. It was an amazing experience and if you ever get asked to do something similar, I would really consider going for it. It was very rewarding and simply loads of fun. Have you ever done something similar? Please let me know in the comments!\n\n","slug":"coding-with-a-group-of-11-year-olds"}],"currentCategory":"programming"},"__N_SSG":true}